@model IEnumerable<WebApp.Models.Project>

<div id="projectsList">
    @foreach (var project in Model)
    {
        <div class="card mb-3">
            <div class="card-body">
                <h5 class="card-title">@project.Title</h5>
                <h6 class="card-subtitle mb-2 text-muted">@project.ProjectType?.Name</h6>
                <p class="card-text">@project.Description</p>
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <span class="badge bg-primary me-2">@project.ProjectType?.Name</span>
                        @foreach (var skill in project.Skills)
                        {
                            <span class="badge bg-secondary me-2">@skill.Name</span>
                        }
                    </div>
                    <a asp-action="ProjectDetails" asp-route-id="@project.Id" class="btn btn-primary">View Details</a>
                </div>
            </div>
        </div>
    }
</div>

<div class="d-flex justify-content-between align-items-center mt-4">
    <div>
        @if (ViewBag.CurrentPage > 1)
        {
            <button class="btn btn-outline-primary" onclick="loadPage(@(ViewBag.CurrentPage - 1))">Previous</button>
        }
    </div>
    <div class="pagination">
        @{
            var startPage = Math.Max(1, ViewBag.CurrentPage - 2);
            var endPage = Math.Min(ViewBag.TotalPages, startPage + 4);
            if (endPage - startPage < 4)
            {
                startPage = Math.Max(1, endPage - 4);
            }
        }
        @for (int i = startPage; i <= endPage; i++)
        {
            <button class="btn @(i == ViewBag.CurrentPage ? "btn-primary" : "btn-outline-primary") ms-1" 
                    onclick="loadPage(@i)">@i</button>
        }
    </div>
    <div>
        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <button class="btn btn-outline-primary" onclick="loadPage(@(ViewBag.CurrentPage + 1))">Next</button>
        }
    </div>
</div> 